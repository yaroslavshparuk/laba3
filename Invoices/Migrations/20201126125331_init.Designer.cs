// <auto-generated />
using System;
using Invoices.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invoices.Migrations
{
    [DbContext(typeof(InvoiceContext))]
    [Migration("20201126125331_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Invoices.Models.HistoryDetail", b =>
                {
                    b.Property<int>("WorkItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RevisionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedToNewValueId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToOldValueId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("RemainingWorkNewValue")
                        .HasColumnType("int");

                    b.Property<int?>("RemainingWorkOldValue")
                        .HasColumnType("int");

                    b.Property<int?>("RevisionById")
                        .HasColumnType("int");

                    b.HasKey("WorkItemId", "RevisionDateTime");

                    b.HasIndex("AssignedToNewValueId");

                    b.HasIndex("AssignedToOldValueId");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("RevisionById");

                    b.ToTable("HistoryDetails");
                });

            modelBuilder.Entity("Invoices.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Invoices.Models.UserWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemId");

                    b.ToTable("UserWorks");
                });

            modelBuilder.Entity("Invoices.Models.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExternalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("Invoices.Models.HistoryDetail", b =>
                {
                    b.HasOne("Invoices.Models.User", "AssignedToNewValue")
                        .WithMany()
                        .HasForeignKey("AssignedToNewValueId");

                    b.HasOne("Invoices.Models.User", "AssignedToOldValue")
                        .WithMany()
                        .HasForeignKey("AssignedToOldValueId");

                    b.HasOne("Invoices.Models.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("Invoices.Models.User", "RevisionBy")
                        .WithMany()
                        .HasForeignKey("RevisionById");

                    b.HasOne("Invoices.Models.WorkItem", "WorkItem")
                        .WithMany("History")
                        .HasForeignKey("WorkItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedToNewValue");

                    b.Navigation("AssignedToOldValue");

                    b.Navigation("AssignedUser");

                    b.Navigation("RevisionBy");

                    b.Navigation("WorkItem");
                });

            modelBuilder.Entity("Invoices.Models.UserWork", b =>
                {
                    b.HasOne("Invoices.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoices.Models.WorkItem", "WorkItem")
                        .WithMany()
                        .HasForeignKey("WorkItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkItem");
                });

            modelBuilder.Entity("Invoices.Models.WorkItem", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
